{
  "patterns": [
    {
      "id": "SYN-FLOOD-001",
      "regex": "SYN flood|port scan|multiple SYN packets|unexpected SYN-ACK|PROTO=TCP.*SYN|half-open connections|connection timeout exceeded",
      "description": "Detects SYN flood attacks where multiple SYN packets are sent without completing the TCP handshake."
    },
    {
      "id": "SLOWLORIS-001",
      "regex": "connection timeout|partial HTTP request|incomplete headers|stalled connection|multiple partial requests|request timed out",
      "description": "Identifies Slowloris attacks where connections are kept open with partial HTTP requests."
    },
    {
      "id": "HTTP2-RAPID-RESET-001",
      "regex": "HTTP/2.*RST_STREAM|GOAWAY frame|multiple stream resets|stream error.*cancel|rapid connection reset|HTTP/2 reset flood",
      "description": "Detects HTTP/2 Rapid Reset attacks where many stream reset frames are sent."
    },
    {
      "id": "TCP-ACK-FLOOD-001", 
      "regex": "ACK flood|multiple ACK packets|unexpected ACK|PROTO=TCP.*ACK|excessive ACK packets|ACK.*without data",
      "description": "Identifies TCP ACK flood attacks where large numbers of ACK packets are sent."
    },
    {
      "id": "TCP-ZERO-WINDOW-001",
      "regex": "TCP zero window|window size: 0|window closed|window update 0|PROTO=TCP.*win 0|flow control|tcp window full",
      "description": "Detects TCP Zero Window attacks that exploit flow control mechanisms."
    },
    {
      "id": "DNS-AMPLIFICATION-001",
      "regex": "IN=.* OUT= .* SRC=.* DST=.* .* PROTO=UDP SPT=53 DPT=\\d+ LEN=(\\d{3,})",
      "description": "Detects DNS amplification attacks with large UDP packets from DNS port 53 to non-standard ports."
    },
    {
      "id": "SQL-INJECTION-001",
      "regex": "SQL syntax.*?error|incorrect syntax near|syntax error at or near",
      "description": "Detects SQL injection attempts triggering database syntax errors."
    },
    {
      "id": "SQL-INJECTION-002",
      "regex": "unclosed quotation mark after the character string|quoted string not properly terminated",
      "description": "Identifies SQL injection attempts with unclosed quotes."
    },
    {
      "id": "SQL-INJECTION-003",
      "regex": "select\\s+.*?from|union\\s+select|1=1|'\\s*or\\s*'\\s*1\\s*=\\s*'\\s*1|--|;|#|version\\(\\)",
      "description": "Matches SQL injection patterns in URLs or parameters."
    },
    {
      "id": "XSS-001",
      "regex": "<script>.*?</script>|<.*?on\\w+\\s*=\\s*['\"]?[^>]+>",
      "description": "Detects inline script tags or event handlers in user input, indicating potential XSS attacks."
    },
    {
      "id": "XSS-002",
      "regex": "javascript:|data:.*?base64|eval|alert",
      "description": "Identifies XSS attempts using javascript:/data: protocols or malicious functions."
    },
    {
      "id": "XSS-003",
      "regex": "<img\\s+src\\s*=\\s*['\"]?javascript:|<iframe\\s+src\\s*=\\s*['\"]?javascript:",
      "description": "Matches XSS in image or iframe tags with javascript: sources."
    },
    {
      "id": "FAILED-LOGIN-001",
      "regex": "failed login|authentication failed|invalid password|access denied|login attempt failed|401 Unauthorized",
      "description": "Detects unsuccessful login attempts, potentially indicating unauthorized access."
    },
    {
      "id": "BRUTE-FORCE-001",
      "regex": "multiple failed login attempts|repeated login failures|account locked|too many login attempts",
      "description": "Detects brute force attacks via repeated failed logins."
    },
    {
      "id": "SUSPICIOUS-IP-001",
      "regex": "suspicious activity from IP|blocked IP|blacklisted IP|IP address flagged",
      "description": "Identifies activity from flagged or blocked IPs."
    },
    {
      "id": "FILE-INCLUSION-001",
      "regex": "include.*?\\.\\.|require.*?\\.\\.|import.*?\\.\\.|\\.\\./|\\.\\.\\\\|/etc/passwd|/proc/self/environ",
      "description": "Detects Local/Remote File Inclusion attempts targeting sensitive files or directories."
    },
    {
      "id": "PATH-TRAVERSAL-001",
      "regex": "\\.\\.(/|\\\\)|/%2e%2e/|\\.\\.%2f|\\.\\.%5c|/etc/passwd|/etc/shadow|/proc/self/environ",
      "description": "Matches directory traversal attempts targeting sensitive files or directories."
    },
    {
      "id": "COMMAND-INJECTION-001",
      "regex": "command execution|shell command|exec\\(|system\\(|popen\\(|passthru\\(|\\?cmd=|\\|.*\\||&&.*&&|;`.*`|;.*curl",
      "description": "Identifies command injection attempts."
    },
    {
      "id": "API-ABUSE-001",
      "regex": "((GET|POST).*?\\s-\\s200\\sOK\\s*\\n.*?){4,}",
      "description": "Detects API abuse via 4+ rapid, successful requests."
    },
    {
      "id": "PROBING-001",
      "regex": "((GET|POST).*?\\s-\\s200\\sOK\\s*\\n.*?){3,}",
      "description": "Detects probing with 3+ rapid requests."
    },
    {
      "id": "CSRF-001",
      "regex": "missing CSRF token|invalid CSRF token|CSRF token validation failed",
      "description": "Detects missing or invalid CSRF tokens in POST requests."
    },
    {
      "id": "CSRF-002",
      "regex": "POST.*?\\s-\\s200\\sOK.*?(?!CSRF token)",
      "description": "Flags POST requests lacking CSRF token validation."
    },
    {
      "id": "SESSION-HIJACKING-001",
      "regex": "session fixation|invalid session ID|session token mismatch|unexpected session change",
      "description": "Detects session manipulation attempts."
    },
    {
      "id": "RCE-001",
      "regex": "remote code execution|eval\\(|assert\\(|preg_replace.*?/e|create_function\\(",
      "description": "Matches Remote Code Execution attempts."
    },
    {
      "id": "DOS-001",
      "regex": "denial of service|resource exhaustion|too many connections|connection limit exceeded",
      "description": "Identifies general DoS attacks."
    },
    {
      "id": "XML-INJECTION-001",
      "regex": "<!\\[CDATA\\[.*?\\]\\]>|<!DOCTYPE.*?>|<?xml.*?>",
      "description": "Detects XML injection attempts."
    },
    {
      "id": "SSRF-001",
      "regex": "http://localhost|http://127\\.0\\.0\\.1|http://169\\.254\\.169\\.254|file://|gopher://|dict://",
      "description": "Matches Server-Side Request Forgery attempts."
    },
    {
      "id": "BOT-ACTIVITY-001",
      "regex": "crawler|spider|bot|scraping detected|non-human activity|User-Agent:.*?bot",
      "description": "Detects automated bot or crawler activity."
    },
    {
      "id": "DOS-HTTP-FLOOD-001",
      "regex": "ATTACK=HTTP Flood",
      "description": "Detects HTTP flood attacks targeting port 80."
    },
    {
      "id": "SUSPICIOUS-DENY-001",
      "regex": "ACTION=DENY",
      "description": "Detects denied network traffic."
    },
    {
      "id": "ICMP-ABUSE-001",
      "regex": "PROTO=ICMP.*ACTION=DENY",
      "description": "Detects denied ICMP traffic."
    },
    {
      "id": "ICMP-FLOOD-001",
      "regex": "ICMP flood|ping flood|excessive ICMP echo|PROTO=ICMP.*TYPE=8|multiple echo request|ping of death",
      "description": "Detects ICMP flood attacks where targets are overwhelmed with ICMP Echo Request (ping) packets."
    },
    {
      "id": "ICMP-SMURF-001",
      "regex": "ICMP.*broadcast|smurf attack|amplified ICMP|ICMP echo reply flood|multiple ICMP TYPE=0|PROTO=ICMP.*TYPE=0.*LEN=(\\d{3,})",
      "description": "Identifies Smurf attacks using broadcast ICMP traffic for amplification."
    },
    {
      "id": "ICMP-FRAGMENT-001",
      "regex": "ICMP fragment|fragmented ICMP|incomplete ICMP|PROTO=ICMP.*INCOMPLETE|overlapping ICMP fragments",
      "description": "Detects fragmented ICMP packet attacks intended to bypass security controls."
    },
    {
      "id": "ICMP-TIMESTAMP-001",
      "regex": "ICMP timestamp|PROTO=ICMP.*TYPE=13|PROTO=ICMP.*TYPE=14|timestamp request|timestamp reply",
      "description": "Identifies ICMP timestamp request/reply attacks used for reconnaissance or time-based exploits."
    },
    {
      "id": "ICMP-ADDRESS-MASK-001",
      "regex": "ICMP address mask|PROTO=ICMP.*TYPE=17|PROTO=ICMP.*TYPE=18|address mask request|address mask reply",
      "description": "Detects ICMP address mask request/reply attacks used for network reconnaissance."
    },
    {
      "id": "ICMP-REDIRECT-001",
      "regex": "ICMP redirect|PROTO=ICMP.*TYPE=5|routing redirect|unauthorized ICMP redirect",
      "description": "Identifies ICMP redirect attacks that can manipulate routing tables."
    },
    {
      "id": "UDP-AMPLIFICATION-001",
      "regex": "UDP amplification|NTP amplification|DNS amplification|SSDP amplification|CharGen|Memcached|PROTO=UDP.*LEN=(\\d{3,})",
      "description": "Detects UDP-based amplification attacks using various protocols like NTP, DNS, SSDP, etc."
    },
    {
      "id": "UDP-FRAGMENTATION-001",
      "regex": "UDP fragment|fragmented UDP|incomplete UDP|PROTO=UDP.*INCOMPLETE|overlapping UDP fragments",
      "description": "Identifies fragmented UDP packet attacks designed to evade detection."
    },
    {
      "id": "TCP-CONNECTION-FLOOD-001",
      "regex": "connection limit reached|too many connections|max connections exceeded|connection queue full|connection table full",
      "description": "Detects TCP connection-based flood attacks exhausting connection tables."
    },
    {
      "id": "TCP-PSH-ACK-FLOOD-001",
      "regex": "PSH-ACK flood|PROTO=TCP.*PSH ACK|multiple PSH packets|excessive PSH-ACK|PSH flag abuse",
      "description": "Identifies floods of TCP packets with PSH-ACK flags set."
    },
    {
      "id": "TCP-FIN-FLOOD-001",
      "regex": "FIN flood|PROTO=TCP.*FIN|multiple FIN packets|excessive FIN|unexpected FIN packets",
      "description": "Detects floods of TCP FIN packets without proper connection teardown."
    },
    {
      "id": "TCP-RST-FLOOD-001",
      "regex": "RST flood|PROTO=TCP.*RST|multiple RST packets|excessive RST|connection reset attack|unexpected RST packets",
      "description": "Identifies floods of TCP RST packets designed to disrupt connections."
    },
    {
      "id": "HTTP-SLOWPOST-001",
      "regex": "slow POST|HTTP POST.*slow|content-length mismatch|incomplete POST data|slow upload|request body timeout",
      "description": "Detects HTTP SlowPost attacks where POST requests are sent very slowly."
    },
    {
      "id": "HTTP-SLOWREAD-001",
      "regex": "slow read|client read timeout|read rate limit|socket read timeout|slow download|response buffer timeout",
      "description": "Identifies HTTP SlowRead attacks where responses are read very slowly."
    },
    {
      "id": "HTTPS-SSL-RENEGOTIATION-001",
      "regex": "SSL renegotiation|TLS renegotiation|multiple handshakes|excessive SSL handshakes|handshake flood|SSL resource exhaustion",
      "description": "Detects SSL/TLS renegotiation attacks that exhaust server resources with repeated handshakes."
    },
    {
      "id": "HTTPS-SSL-DOS-001",
      "regex": "SSL DoS|HTTPS resource exhaustion|SSL session cache full|SSL handshake timeout|TLS resource limit",
      "description": "Identifies SSL/TLS-based denial of service attacks targeting the encryption process."
    },
    {
      "id": "LAYER7-CACHE-BYPASS-001",
      "regex": "cache bypass|cache-busting|random query strings|unique URL parameters|high cache miss ratio|excessive origin hits",
      "description": "Detects Layer 7 DDoS using cache-busting techniques to bypass CDN caching."
    },
    {
      "id": "LAYER7-APPSEC-BYPASS-001",
      "regex": "WAF bypass|security rule evasion|rule bypass attempt|evasion technique|encoding bypass|signature evasion",
      "description": "Identifies attempts to bypass application security controls as part of a DDoS attack."
    },
    {
      "id": "HMTP-HOST-HEADER-ATTACK-001",
      "regex": "host header attack|host header injection|HTTP host mismatch|multiple host headers|invalid host value",
      "description": "Detects HTTP Host header manipulation attacks."
    },
    {
      "id": "HTTP-HEADER-FLOOD-001",
      "regex": "header flood|excessive headers|header count exceeded|header size limit|large cookie|large HTTP headers",
      "description": "Identifies HTTP requests with extremely large or numerous headers."
    },
    {
      "id": "BROWSER-FINGERPRINTING-EVASION-001",
      "regex": "bot detection evasion|browser fingerprint spoofing|headless browser detected|automation detection|bot signature|fake user-agent",
      "description": "Detects attempts to evade browser fingerprinting and bot detection."
    },
    {
      "id": "DDOS-BOTNET-COORDINATION-001",
      "regex": "botnet coordination|C&C communication|distributed command pattern|botnet signature|coordinated attack pattern|synchronized requests",
      "description": "Identifies patterns indicating botnet coordination in DDoS attacks."
    },
    {
      "id": "QUIC-FLOOD-001",
      "regex": "QUIC flood|UDP.*QUIC|excessive QUIC requests|QUIC resource exhaustion|QUIC protocol abuse",
      "description": "Detects DDoS attacks using the QUIC protocol."
    },
    {
      "id": "WEBSOCKET-FLOOD-001",
      "regex": "WebSocket flood|WS connection flood|excessive WebSocket|WebSocket resource exhaustion|WS protocol abuse",
      "description": "Identifies DDoS attacks targeting WebSocket connections."
    },
    {
      "id": "API-GATEWAY-FLOOD-001",
      "regex": "API gateway flood|API limit exceeded|API rate limit|excessive API calls|API abuse pattern",
      "description": "Detects DDoS attacks specifically targeting API gateways."
    },
    {
      "id": "MULTI-VECTOR-ATTACK-001",
      "regex": "multiple attack vectors|combined attack|hybrid DDoS|sequential attack pattern|attack vector rotation",
      "description": "Identifies multi-vector DDoS attacks using multiple techniques simultaneously."
    },
    {
      "id": "IOT-BOTNET-SIGNATURE-001",
      "regex": "IoT botnet|Mirai signature|Mirai variant|IoT malware pattern|botnet command signature",
      "description": "Detects signatures associated with known IoT botnets like Mirai and its variants."
    },
    {
      "id": "REFLECTION-ATTACK-001", 
      "regex": "reflection attack|SSDP reflection|NTP reflection|DNS reflection|Memcached reflection|amplification factor",
      "description": "Identifies reflection/amplification attacks using various UDP protocols."
    },
    {
      "id": "UDP-ABUSE-001",
      "regex": "PROTO=UDP.*ACTION=DENY",
      "description": "Detects denied UDP traffic."
    },
    {
      "id": "TIMESTAMP-ANOMALY-001",
      "regex": "^(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}).*\\n\\1.*\\n\\1",
      "description": "Detects multiple log entries with identical timestamps."
    },
    {
      "id": "DDOS-HIGH-RATE-001",
      "regex": "High request rate|requests in \\d+ seconds|requests/min",
      "description": "Detects high request rates indicating DDoS."
    },
    {
      "id": "DDOS-SYSTEM-OVERLOAD-001",
      "regex": "System overload|CPU at \\d+%|memory exhaustion",
      "description": "Identifies server resource exhaustion."
    },
    {
      "id": "DDOS-ALERT-001",
      "regex": "Potential DDoS attack|distributed denial of service|attack detected.*requests.*IPs",
      "description": "Matches explicit DDoS alerts."
    },
    {
      "id": "DDOS-MITIGATION-001",
      "regex": "Rate limiting triggered|Firewall rule applied|connections dropped",
      "description": "Detects DDoS mitigation actions."
    },
    {
      "id": "ALERT-DETECTION-001",
      "regex": "ALERT:.*(SSRF|Command injection|attack detected)",
      "description": "Detects alert messages indicating SSRF, command injection, or other attacks."
    },
    {
      "id": "SYN-FLOOD-001",
      "regex": "PROTO=TCP.*SYN.*(?!ACK).*LEN=\\d+.*\\n.*PROTO=TCP.*SYN.*(?!ACK)",
      "description": "Detects multiple TCP SYN packets without corresponding ACKs, indicating a SYN flood attack."
    },
    {
      "id": "SLOWLORIS-001",
      "regex": "GET /.*\\n(?!Host:).*200 OK.*\\n.*GET /.*\\n(?!Host:)",
      "description": "Detects incomplete HTTP GET requests without Host headers, sent repeatedly, indicating a Slowloris attack."
    },
    {
      "id": "APP-FLOOD-001",
      "regex": "(GET /login.*200 OK\\s*\\n.*?){5,}",
      "description": "Detects 5+ rapid GET requests to the login endpoint, indicating an application-layer flood."
    },
    {
      "id": "REFLECTION-NON-DNS-001",
      "regex": "PROTO=UDP.*SPT=123.*LEN=\\d{3,}",
      "description": "Detects large UDP packets from NTP port 123, indicating a non-DNS reflection attack."
    },
    {
      "id": "FRAG-FLOOD-001",
      "regex": "PROTO=IP.*FRAG.*LEN=\\d{3,}.*\\n.*PROTO=IP.*FRAG",
      "description": "Detects multiple fragmented IP packets, indicating a fragmented packet flood."
    },
    {
      "id": "FIREWALL-MISCONFIG-001",
      "regex": "ACTION=ALLOW.*SRC=.*blacklisted",
      "description": "Detects allowed traffic from blacklisted IPs, indicating a firewall misconfiguration."
    },
    {
      "id": "IP-SPOOF-001",
      "regex": "SRC=.*TTL=\\d{1,2}.*\\n.*SRC=.*TTL=\\d{3}",
      "description": "Detects inconsistent TTL values from the same source IP, indicating potential IP spoofing."
    },
    {
      "id": "INTERNAL-HOST-001",
      "regex": "SRC=192\\.168\\.\\d+\\.\\d+.*ATTACK.*",
      "description": "Detects attack traffic from internal IP addresses, indicating a compromised internal host."
    },
    {
      "id": "RESOURCE-MISCONFIG-001",
      "regex": "max_connections.*exceeded.*(?!Rate limiting)",
      "description": "Detects connection limit exceedances without mitigation, indicating resource misconfiguration."
    },
    {
      "id": "EXPOSED-SERVICE-001",
      "regex": "DST=.*DPT=22.*PROTO=TCP.*ATTACK",
      "description": "Detects attack traffic targeting SSH port 22, indicating an exposed service vulnerability."
    },
    {
      "id": "HTTP2-CONTINUATION-001",
      "regex": "HTTP/2.*CONTINUATION.*(?!END_HEADERS)",
      "description": "Detects HTTP/2 CONTINUATION frames without END_HEADERS, indicating a CONTINUATION flood attack."
    },
    {
      "id": "APACHE-DOS-001",
      "regex": "Server: Apache/2\\.4\\.(0|[1-4][0-9]|50|51).*REQUEST.*DENY",
      "description": "Detects denied requests to Apache HTTP Server versions 2.4.0–2.4.51, vulnerable to DoS (CVE-2022-22720, CVE-2022-22721)."
    },
    {
      "id": "TCP-ACK-FLOOD-001",
      "regex": "PROTO=TCP.*ACK.*LEN=\\d+.*\\n.*PROTO=TCP.*ACK.*\\n.*PROTO=TCP.*ACK",
      "description": "Detects multiple TCP ACK packets in rapid succession, indicating a TCP ACK flood attack."
    },
    {
      "id": "HTTP2-RAPID-RESET-001",
      "regex": "HTTP/2.*RST_STREAM.*\\n.*HTTP/2.*RST_STREAM.*\\n.*HTTP/2.*RST_STREAM",
      "description": "Detects multiple HTTP/2 RST_STREAM frames in rapid succession, indicating a Rapid Reset attack (CVE-2023-44487)."
    },
    {
      "id": "EXPOSED-MANAGEMENT-001",
      "regex": "GET /admin.*200 OK|POST /api/management.*200 OK",
      "description": "Detects successful requests to admin or management endpoints, indicating an exposed management interface."
    },
    {
      "id": "RATE-LIMIT-MISCONFIG-001",
      "regex": "(GET /.*200 OK\\s*\\n.*?){10,}.*(?!Rate limiting)",
      "description": "Detects 10+ rapid GET requests without rate limiting triggered, indicating a rate limiting misconfiguration."
    },
    {
      "id": "TCP-ZERO-WINDOW-001",
      "regex": "PROTO=TCP.*WINDOW=0.*\\n.*PROTO=TCP.*WINDOW=0",
      "description": "Detects multiple TCP packets with zero window size, indicating a TCP Zero Window attack."
    }
  ]
}